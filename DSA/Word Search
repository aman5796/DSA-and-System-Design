class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        int n = board.size();
        int m = board[0].size();
        for(int i=0;i<n;i++) {
            for(int j=0;j<m;j++) {
                if(board[i][j]==word[0] && isThere(board,word,0,i,j)) {
                    return true;
                }
            }
        }
        return false;
    }

    bool isThere(vector<vector<char>>& board, string word, int k, int i, int j) {
        int n = board.size();
        int m = board[0].size();
        if(k==word.length()) {
            return true;
        }
        if(i<0 || i>=n || j<0 || j>=m || board[i][j]!=word[k]) {
            return false;
        }
        char c = board[i][j];
        board[i][j] = ' ';
        bool up,down,left,right;
        up = isThere(board,word,k+1,i-1,j);
        down = isThere(board,word,k+1,i+1,j);
        left = isThere(board,word,k+1,i,j-1);
        right = isThere(board,word,k+1,i,j+1);
        board[i][j] = c;
        return (up || down || left || right);
    }
};