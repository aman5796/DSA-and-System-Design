class Solution {
public:
    int mod = 1e9+1;
    int numDistinct(string s, string t) {
        int n = s.length();
        int m = t.length();
        vector<vector<int>> dp(n,vector<int>(m,-1));
        return numWays(s,t,n-1,m-1,dp);
    }

    int numWays(string s, string t, int i1, int i2, vector<vector<int>> &dp) {
        if(i2<0) return 1;
        if(i1<0) return 0;
        if(dp[i1][i2]!=-1) return dp[i1][i2];
        if(s[i1]==t[i2]) {
            return dp[i1][i2] = (numWays(s,t,i1-1,i2-1,dp) + numWays(s,t,i1-1,i2,dp))%mod;
        }
        else {
            return dp[i1][i2] = numWays(s,t,i1-1,i2,dp);
        }
        return -1;
    }
};