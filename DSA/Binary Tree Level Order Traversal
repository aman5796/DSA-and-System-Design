/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(root==NULL) return {};
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        vector<vector<int>> res;
        res.push_back({root->val});
        while(!q.empty())
        {
            pair<TreeNode*,int> top = q.front();
            q.pop();
            if(top.first->left) {
                q.push({top.first->left,top.second+1});
                if(res.size()-1>=top.second+1) {
                    res[top.second+1].push_back(top.first->left->val);
                }
                else {
                    res.push_back({top.first->left->val});
                }
            }
            if(top.first->right) {
                q.push({top.first->right,top.second+1});
                if(res.size()-1>=top.second+1) {
                    res[top.second+1].push_back(top.first->right->val);
                }
                else {
                    res.push_back({top.first->right->val});
                }
            }
        }
        return res;
    }
};