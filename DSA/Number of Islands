class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        vector<vector<bool>> vis(m,vector<bool>(n,false));
        int ans = 0;
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                if(grid[i][j]=='1' && !vis[i][j]) {
                    ans++;
                    dfs(grid,i,j,vis);
                }
            }
        }
        return ans;
    }

    void dfs(vector<vector<char>> &grid, int i, int j, vector<vector<bool>> &vis) {
        int row = grid.size();
        int col = grid[0].size();
        if(i<0 || i>=row || j<0 || j>=col) {
            return;
        }
        if(grid[i][j]=='0' || vis[i][j]) {
            return;
        }
        vis[i][j] = true;
        dfs(grid,i+1,j,vis);
        dfs(grid,i-1,j,vis);
        dfs(grid,i,j+1,vis);
        dfs(grid,i,j-1,vis);
    }
};