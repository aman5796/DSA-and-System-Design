class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& arr, int target) {
        vector<vector<int>> res;
        int n = arr.size();
        sort(arr.begin(),arr.end());
        vector<int> cmbn;
        getCombination(arr,0,n,target,cmbn,res);
        return res;
    }

    void getCombination(vector<int> &arr, int i, int n, int m, vector<int> &cmbn,vector<vector<int>> &res) {
        if(m<0) {
            return;
        }
        if(m==0) {
            res.push_back(cmbn);
            return;
        }
        if(i==n) {
            return;
        }
        cmbn.push_back(arr[i]);
        getCombination(arr,i+1,n,m-arr[i],cmbn,res);
        cmbn.pop_back();
        while(i<n-1 && arr[i]==arr[i+1]) {
            i++;
        }
        getCombination(arr,i+1,n,m,cmbn,res);
    }
};