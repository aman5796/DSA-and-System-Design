class Solution {
public:
    string longestPalindrome(string s) {
        int n = s.length();
        int ans = INT_MIN;
        int startPoint = -1;
        vector<vector<int>> dp(n,vector<int>(n,-1));
        for(int i=0;i<n;i++) {
            for(int j=i;j<n;j++) {
                if(checkPal(s,i,j,dp)) {
                    if(j-i+1>ans) {
                        ans = j-i+1;
                        startPoint = i;
                    }
                }
            }
        }
        return s.substr(startPoint,ans);
    }

    bool checkPal(string &s, int i, int j, vector<vector<int>> &dp) {
        if(i>=j) return true;
        if(dp[i][j]!=-1) return dp[i][j];
        if(s[i]==s[j]) {
            return dp[i][j] = checkPal(s,i+1,j-1,dp);
        }
        return dp[i][j] = false;
    }
};