/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.size()==0) return NULL;
        if(lists.size()==1) return lists[0];
        priority_queue<pair<int,ListNode*>, vector<pair<int,ListNode*>>, greater<pair<int,ListNode*>>> pq;
        for(int i=0;i<lists.size();i++) {
            if(lists[i]) {
                ListNode* ptr = lists[i];
                while(ptr) {
                    pq.push({ptr->val,ptr});
                    ptr = ptr->next;
                }
            }
        }
        if(pq.size()==0) return NULL;
        ListNode* res = pq.top().second;
        ListNode* head = res;
        pq.pop();
        res->next = NULL;
        while(!pq.empty()) {
            res->next = pq.top().second;
            res = res->next;
            res->next = NULL;
            pq.pop();
        }
        return head;
    }
};