class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l = 0;
        int r = nums.size()-1;
        if(r==0) return(target==nums[0])?0:-1;
        if(r==1) {
            if(nums[0]==target) return 0;
            if(nums[1]==target) return 1;
            return -1;
        }
        if(nums[l]==target) return l;
        if(nums[r]==target) return r;
        while(l<=r) {
            int mid = l+((r-l)/2);
            if(nums[mid]==target) {
                return mid;
            }
            if(nums[l]>=nums[r]) {
                if(nums[mid]>=nums[r]) {
                    if(target < nums[mid] && target >= nums[l]) {
                        r = mid-1;
                    }
                    else {
                        l = mid+1;
                    }
                }
                else {
                    if(target>nums[mid] && target<=nums[r]) {
                        l = mid+1;
                    }
                    else {
                        r = mid-1;
                    }
                }
            }
            else {
                if(target>nums[mid]) {
                    l = mid+1;
                }
                else {
                    r = mid-1;
                }
            }
        }
        return -1;
    }
};