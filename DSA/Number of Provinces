class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int ans = 0;
        int n = isConnected.size();
        vector<bool> vis(n+1,false);
        for(int i=0;i<n;i++) {
            if(!vis[i+1]) {
                ans++;
                dfs(isConnected,i,vis);
            }
        }
        return ans;
    }

    void dfs(vector<vector<int>> &graph, int node, vector<bool> &vis) {
        stack<int> st;
        st.push(node+1);
        vis[node+1] = true;
        while(!st.empty()) {
            int top = st.top();
            st.pop();
            int n = graph[top-1].size();
            for(int i=0;i<n;i++) {
                if(graph[top-1][i]==1 && !vis[i+1]) {
                    vis[i+1] = true;
                    st.push(i+1);
                }
            }
        }
    }
};