class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> res;
        int n = s.length();
        vector<string> cmbn;
        isPalindrome(s,0,n,cmbn,res);
        return res;
    }

    void isPalindrome(string s, int i, int n, vector<string> &cmbn, vector<vector<string>> &res) {
        if(i==n) {
            if(cmbn.size()>0) {
                res.push_back(cmbn);
            }
            return;
        };
        for(int j=i;j<n;j++) {
            if(checkPalindrome(s,i,j)) {
                cmbn.push_back(s.substr(i,j-i+1));
                isPalindrome(s,j+1,n,cmbn,res);
                cmbn.pop_back();
            }
        }
    }

    bool checkPalindrome(string s, int i, int j) {
        while(i<=j) {
            if(s[i++]!=s[j--]) {
                return false;
            }
        }
        return true;
    }
};